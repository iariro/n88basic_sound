1000 ' FM音源音色エディタ
1010 '
1020 ' 2019/05/10-05/13 kumagai 開発開始
1030 ' 2019/07/05 kumagai 実機上でデバッグ
1040 ' 2019/08/11 kumagai 実機上でデバッグ
1050 '
1060 ' 00 @      0
1070 ' 01
1080 ' 02 FB     7
1090 ' 03 ALG    7
1100 ' 04 WF     5
1110 ' 05 SYNC   255
1120 ' 06 SPEED  16383
1130 ' 07 PD     -127
1140 ' 08 AD     -127
1150 ' 09 PS     15
1160 ' 10
1170 ' 11  MSK AR  DR  SR  RR  SL  TL  KS  ML  DT  AS
1180 ' 12  0   31  31  31  15  15  127  3  15  -4  15
1190 ' 13  0   31  31  31  15  15  127  3  15  -4  15
1200 ' 14  0   31  31  31  15  15  127  3  15  -4  15
1210 ' 15  0   31  31  31  15  15  127  3  15  -4  15
1220 '
1230 ' ------------------------------------------------------------------------
1240 ' 初期化
1250 CLEAR,&H9E00
1260 PLAY ALLOC 255
1270 '
1280 DEFINT A-Z
1290 OPTION BASE 0
1300 DIM VP(4, 9)
1310 DIM VPMAX(4, 10)
1320 DIM VPMIN(4, 10)
1330 DIM VPSTP(4, 10)
1340 DIM VNAME$(81)
1350 CLS 3
1360 '
1370 ' 値の範囲読み込み
1380 FOR I=0 TO 8
1390 READ VPMIN(0, I), VPMAX(0, I), VPSTP(0, I)
1400 NEXT I
1410 '
1420 FOR I=0 TO 9
1430 READ MIN, MAX, STP
1440 FOR J=1 TO 4
1450 VPMIN(J, I) = MIN
1460 VPMAX(J, I) = MAX
1470 VPSTP(J, I) = STP
1480 NEXT J
1490 NEXT I
1500 '
1510 OPEN "vname.txt" FOR INPUT AS #1
1520 FOR I=0 TO 81
1530 INPUT #1, VNAME$(I)
1540 NEXT I
1550 CLOSE #1
1560 '
1570 VN = 0
1580 ' 音色読み込み
1590 VOICE COPY VN, VP
1600 GOSUB *PRINTVN
1610 '
1620 AREA=0
1630 CX=0
1640 CY=0
1650 ' キー待ち
1660 LOOP = 1
1670 WHILE LOOP = 1
1680 ' print cursor
1690 IF AREA=0 THEN LOCATE 6, 0
1700 IF AREA=1 THEN LOCATE 16, 2+CY
1710 IF AREA=2 THEN LOCATE 5*CX, 12+CY
1720 PRINT "*"
1730 ' key wait
1740 K$ = ""
1750 WHILE K$=""
1760 K$=INKEY$
1770 WEND
1780 '
1790 ' Esc to end
1800 IF ASC(K$) = 27 THEN LOOP=0 : GOTO *CONTI
1810 ' cursor to move *
1820 IF ASC(K$) >= 28 AND ASC(K$) <= 31 THEN GOSUB *MOVE : GOTO *CONTI
1830 ' P to play
1840 IF K$="p" OR K$="P" THEN GOSUB * PL : GOTO *CONTI
1850 ' u/d to up/down
1860 IF K$="u" OR K$="d" OR K$="U" OR K$="D" THEN GOSUB *UPDOWN : GOTO *CONTI
1870 GOSUB *MOVE
1880 *CONTI
1890 WEND
1900 END
1910 ' ------------------------------------------------------------------------
1920 ' パラメータ表示
1930 *PRINTVN
1940 LOCATE 0, 0 : PRINT "VOICE  "; VN; STRING$(40, " ")
1950 LOCATE 12, 0 : PRINT VNAME$(VN)
1960 LOCATE 0, 2 : PRINT "FeedBack         "; (VP(0, 0) AND &H38) / 8
1970 LOCATE 0, 3 : PRINT "Algorithm        "; VP(0, 0) AND &H7
1980 LOCATE 0, 4 : PRINT "WaveForm         "; VP(0, 2)
1990 LOCATE 0, 5 : PRINT "LFO SyncDelay    "; VP(0, 3)
2000 LOCATE 0, 6 : PRINT "LFO Speed        "; VP(0, 4); "    "
2010 LOCATE 0, 7 : PRINT "LFO Pitch Depth  "; VP(0, 5)
2020 LOCATE 0, 8 : PRINT "LFO Amp Depth    "; VP(0, 6); "   "
2030 LOCATE 0, 9 : PRINT "LFO Pitch Sense  "; VP(0, 7)
2040 '
2050 LOCATE 2, 11 : PRINT "Msk  AR   DR   SR   RR   SL   TL   KS   ML   DT   AS"
2060 FOR I=1 TO 4
2070 FOR J=0 TO 9
2080 LOCATE 1, 11+I
2090 PRINT (VP(0, 1) AND (2^(I-1))) / (2^(I-1))
2100 LOCATE 6+5*J, 11+I
2110 PRINT USING "###"; VP(I, J)
2120 NEXT J
2130 NEXT I
2140 RETURN
2150 ' ------------------------------------------------------------------------
2160 ' 試聴
2170 *PL
2180 VOICE VN, VP
2190 PLAY "@" + STR$(VN) + "c"
2200 RETURN
2210 ' ------------------------------------------------------------------------
2220 ' 値UP/DOWN
2230 *UPDOWN
2240 STP=0
2250 IF K$="u" OR K$="U" THEN STP=1
2260 IF K$="d" OR K$="D" THEN STP=-1
2270 ON AREA+1 GOTO *UPDOWN1,*UPDOWN2,*UPDOWN3
2280 '
2290 *UPDOWN1
2300 IF (STP=1 AND VN<81) OR (STP=-1 AND VN>0) THEN VN = VN + STP : VOICE COPY VN,VP : GOSUB *PRINTVN ELSE BEEP
2310 RETURN
2320 '
2330 *UPDOWN2
2340 FB = (VP(0,0) AND &H38)/8
2350 ALG = (VP(0,0) AND &H7)
2360 IF CY=0 AND ((STP=-1 AND FB>VPMIN(0,0)) OR (STP=1 AND FB<VPMAX(0,0))) THEN FB=FB+STP : VP(0,0) = FB*8+ALG : GOSUB *PRINTVN
2370 IF CY=1 AND ((STP=-1 AND ALG>VPMIN(0,1)) OR (STP=1 AND ALG<VPMAX(0,1))) THEN ALG=ALG+STP : VP(0,0) = FB*8+ALG : GOSUB *PRINTVN
2380 IF CY>=2 AND ((STP=-1 AND VP(0,CY)>VPMIN(0,CY)) OR (STP=1 AND VP(0,CY)<VPMAX(0,CY))) THEN VP(0,CY) = VP(0,CY) + STP * VPSTP(0,CY) : GOSUB *PRINTVN
2390 RETURN
2400 '
2410 *UPDOWN3
2420 IF CX=0 THEN *UPDOWN31 ELSE *UPDOWN32
2430 *UPDOWN31 ' Mask
2440 MSK=(VP(0,1) AND (2^CY)) / (2^CY)
2450 IF STP=-1 AND MSK>0 THEN MSK=0 ELSE IF STP=1 AND MSK=0 THEN MSK=(2^CY) ELSE BEEP : RETURN
2460 VP(0,1) = (VP(0,1) AND (&HF - 2^CY)) OR MSK
2470 LOCATE 1, 12+CY
2480 PRINT (VP(0, 1) AND (2^CY)) / (2^CY)
2490 RETURN
2500 '
2510 *UPDOWN32
2520 IF (STP=-1 AND VP(CY+1,CX-1)>VPMIN(CY+1,CX-1)) OR (STP=1 AND VP(CY+1,CX-1)<VPMAX(CY+1,CX-1)) THEN VP(CY+1,CX-1)=VP(CY+1,CX-1)+STP*VPSTP(CY+1,CX-1) ELSE BEEP : RETURN
2530 LOCATE 1+5*CX, 12+CY
2540 PRINT USING "###"; VP(CY+1,CX-1)
2550 RETURN
2560 ' ------------------------------------------------------------------------
2570 ' カーソル移動
2580 *MOVE
2590 ON AREA+1 GOTO *MOVE1,*MOVE2,*MOVE3
2600 *MOVE1
2610 IF ASC(K$) = 31 THEN AREA=1 : LOCATE 6, 0 : PRINT " " ELSE BEEP
2620 RETURN
2630 '
2640 *MOVE2
2650 CY2=CY
2660 IF ASC(K$) = 30 THEN CY2 = CY - 1
2670 IF ASC(K$) = 31 THEN CY2 = CY + 1
2680 IF CY2=CY THEN BEEP : RETURN
2690 LOCATE 16, 2+CY
2700 PRINT " "
2710 IF CY2<0 THEN AREA=0 : CY2=0
2720 IF CY2>7 THEN AREA=2 : CY2=0
2730 CY=CY2
2740 RETURN
2750 '
2760 *MOVE3
2770 CX2=CX : CY2=CY
2780 IF ASC(K$) = 28 AND CX<10 THEN CX2 = CX + 1
2790 IF ASC(K$) = 29 AND CX>0 THEN CX2 = CX - 1
2800 IF ASC(K$) = 30 THEN CY2 = CY - 1
2810 IF ASC(K$) = 31 AND CY<3 THEN CY2 = CY + 1
2820 IF CX2=CX AND CY2=CY THEN BEEP : RETURN
2830 LOCATE 5*CX, 12+CY
2840 PRINT " "
2850 IF CY2<0 THEN AREA=1 : CY2=7
2860 CX=CX2 : CY=CY2
2870 RETURN
2880 ' ------------------------------------------------------------------------
2890 ' 配列の各値の範囲
2900 DATA 0, 7, 1
2910 DATA 0, 7, 1
2920 DATA 0, 15, 1
2930 DATA 0, 5, 1
2940 DATA 0, 255, 1
2950 DATA 0, 16383, 10
2960 DATA -127, 127, 1
2970 DATA -127, 127, 1
2980 DATA 0, 15, 1
2990 '
3000 DATA 0, 31, 1
3010 DATA 0, 31, 1
3020 DATA 0, 31, 1
3030 DATA 0, 15, 1
3040 DATA 0, 15, 1
3050 DATA 0, 127, 1
3060 DATA 0, 3, 1
3070 DATA 0, 15, 1
3080 DATA -4, 3, 1
3090 DATA 0, 15, 1
3100 ' ------------------------------------------------------------------------
